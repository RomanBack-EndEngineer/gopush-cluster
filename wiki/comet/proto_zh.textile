<h3>Terry-Mao/gopush-cluster Comet 协议文档</h3>
直接使用Redis的协议格式，方便解析和使用，参考 "Redis 协议":redis_ref 。

<h3>网络层</h3>
协议命令总是以 \r\n(CRLF)结尾。

<h3>请求</h3>
当comet接受订阅命令，如果存在任何错误都会主动断开连接，否则会返回心跳或者是响应包。
<pre>
==*==参数个数 CR LF
$第一个参数的字符串占用字节数 CR LF
参数数据 CR LF
...
$第N个参数的字符串占用字节数字 CR LF
参数数据 CR LF
</pre>
请求订阅参数列表：

(head). | 字段 | 描述 | 顺序 |
| cmd | 指令，发起订阅指令为“sub” | 0 |
| key | 用户发起订阅的Key | 1 |
| mid | 用户本地保存的“最后收到的消息ID”，如果没有就用0 | 2 |
| heartbeat | 长连接的心跳周期（单位：秒）| 3 |

例如：
<pre>==*==4\r\n$3\r\nsub\r\n$9\r\nTerry-Mao\r\n$1\r\n0\r\n$2\r\n10\r\n</pre>
表示一共有 *4* 个参数的指令，第一个参数表示指令是 *sub* ；第二个参数表示Key是 *Terry-Mao* ；第三个参数表示本地的消息ID是 *0* ；第四个参数表示心跳周期是 *10* 秒；其中指令前面的$num表示指令的字符字节长度，如$3表示sub的订阅指令长度为 *3* 。

<h3>握手</h3>
服务端接受请求命令包成功以后，返回一个心跳包给客户端，这时候客户端才开始定期发送心跳或者准备接受响应包。

<h3>响应</h3>
格式参照上面提到的Redis协议来返回reply，
例如：
<pre>$5\r\nTerry\r\n</pre>
其中Terry就是推送的消息内容。

<h3>心跳</h3>
心跳包：<pre>h</pre>
客户端定期发送心跳给服务端，服务端接受以后，返回相同的心跳包。

[redis_ref]http://redis.io/topics/protocol
